//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleHost.EvalRefFromService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EvalRefFromService.IEvalService")]
    public interface IEvalService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvalService/SubmitEval", ReplyAction="http://tempuri.org/IEvalService/SubmitEvalResponse")]
        void SubmitEval(EvalServiceLibrary.Eval eval);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEvalService/SubmitEval", ReplyAction="http://tempuri.org/IEvalService/SubmitEvalResponse")]
        System.IAsyncResult BeginSubmitEval(EvalServiceLibrary.Eval eval, System.AsyncCallback callback, object asyncState);
        
        void EndSubmitEval(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvalService/SubmitEvals", ReplyAction="http://tempuri.org/IEvalService/SubmitEvalsResponse")]
        void SubmitEvals(string Submitter, string Comments, System.DateTime Timesent);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEvalService/SubmitEvals", ReplyAction="http://tempuri.org/IEvalService/SubmitEvalsResponse")]
        System.IAsyncResult BeginSubmitEvals(string Submitter, string Comments, System.DateTime Timesent, System.AsyncCallback callback, object asyncState);
        
        void EndSubmitEvals(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvalService/GetEvals", ReplyAction="http://tempuri.org/IEvalService/GetEvalsResponse")]
        EvalServiceLibrary.Eval[] GetEvals();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEvalService/GetEvals", ReplyAction="http://tempuri.org/IEvalService/GetEvalsResponse")]
        System.IAsyncResult BeginGetEvals(System.AsyncCallback callback, object asyncState);
        
        EvalServiceLibrary.Eval[] EndGetEvals(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEvalServiceChannel : ConsoleHost.EvalRefFromService.IEvalService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEvalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEvalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EvalServiceLibrary.Eval[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EvalServiceLibrary.Eval[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EvalServiceClient : System.ServiceModel.ClientBase<ConsoleHost.EvalRefFromService.IEvalService>, ConsoleHost.EvalRefFromService.IEvalService {
        
        private BeginOperationDelegate onBeginSubmitEvalDelegate;
        
        private EndOperationDelegate onEndSubmitEvalDelegate;
        
        private System.Threading.SendOrPostCallback onSubmitEvalCompletedDelegate;
        
        private BeginOperationDelegate onBeginSubmitEvalsDelegate;
        
        private EndOperationDelegate onEndSubmitEvalsDelegate;
        
        private System.Threading.SendOrPostCallback onSubmitEvalsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEvalsDelegate;
        
        private EndOperationDelegate onEndGetEvalsDelegate;
        
        private System.Threading.SendOrPostCallback onGetEvalsCompletedDelegate;
        
        public EvalServiceClient() {
        }
        
        public EvalServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EvalServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EvalServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EvalServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SubmitEvalCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SubmitEvalsCompleted;
        
        public event System.EventHandler<GetEvalsCompletedEventArgs> GetEvalsCompleted;
        
        public void SubmitEval(EvalServiceLibrary.Eval eval) {
            base.Channel.SubmitEval(eval);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSubmitEval(EvalServiceLibrary.Eval eval, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSubmitEval(eval, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSubmitEval(System.IAsyncResult result) {
            base.Channel.EndSubmitEval(result);
        }
        
        private System.IAsyncResult OnBeginSubmitEval(object[] inValues, System.AsyncCallback callback, object asyncState) {
            EvalServiceLibrary.Eval eval = ((EvalServiceLibrary.Eval)(inValues[0]));
            return this.BeginSubmitEval(eval, callback, asyncState);
        }
        
        private object[] OnEndSubmitEval(System.IAsyncResult result) {
            this.EndSubmitEval(result);
            return null;
        }
        
        private void OnSubmitEvalCompleted(object state) {
            if ((this.SubmitEvalCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SubmitEvalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SubmitEvalAsync(EvalServiceLibrary.Eval eval) {
            this.SubmitEvalAsync(eval, null);
        }
        
        public void SubmitEvalAsync(EvalServiceLibrary.Eval eval, object userState) {
            if ((this.onBeginSubmitEvalDelegate == null)) {
                this.onBeginSubmitEvalDelegate = new BeginOperationDelegate(this.OnBeginSubmitEval);
            }
            if ((this.onEndSubmitEvalDelegate == null)) {
                this.onEndSubmitEvalDelegate = new EndOperationDelegate(this.OnEndSubmitEval);
            }
            if ((this.onSubmitEvalCompletedDelegate == null)) {
                this.onSubmitEvalCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSubmitEvalCompleted);
            }
            base.InvokeAsync(this.onBeginSubmitEvalDelegate, new object[] {
                        eval}, this.onEndSubmitEvalDelegate, this.onSubmitEvalCompletedDelegate, userState);
        }
        
        public void SubmitEvals(string Submitter, string Comments, System.DateTime Timesent) {
            base.Channel.SubmitEvals(Submitter, Comments, Timesent);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSubmitEvals(string Submitter, string Comments, System.DateTime Timesent, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSubmitEvals(Submitter, Comments, Timesent, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSubmitEvals(System.IAsyncResult result) {
            base.Channel.EndSubmitEvals(result);
        }
        
        private System.IAsyncResult OnBeginSubmitEvals(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Submitter = ((string)(inValues[0]));
            string Comments = ((string)(inValues[1]));
            System.DateTime Timesent = ((System.DateTime)(inValues[2]));
            return this.BeginSubmitEvals(Submitter, Comments, Timesent, callback, asyncState);
        }
        
        private object[] OnEndSubmitEvals(System.IAsyncResult result) {
            this.EndSubmitEvals(result);
            return null;
        }
        
        private void OnSubmitEvalsCompleted(object state) {
            if ((this.SubmitEvalsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SubmitEvalsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SubmitEvalsAsync(string Submitter, string Comments, System.DateTime Timesent) {
            this.SubmitEvalsAsync(Submitter, Comments, Timesent, null);
        }
        
        public void SubmitEvalsAsync(string Submitter, string Comments, System.DateTime Timesent, object userState) {
            if ((this.onBeginSubmitEvalsDelegate == null)) {
                this.onBeginSubmitEvalsDelegate = new BeginOperationDelegate(this.OnBeginSubmitEvals);
            }
            if ((this.onEndSubmitEvalsDelegate == null)) {
                this.onEndSubmitEvalsDelegate = new EndOperationDelegate(this.OnEndSubmitEvals);
            }
            if ((this.onSubmitEvalsCompletedDelegate == null)) {
                this.onSubmitEvalsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSubmitEvalsCompleted);
            }
            base.InvokeAsync(this.onBeginSubmitEvalsDelegate, new object[] {
                        Submitter,
                        Comments,
                        Timesent}, this.onEndSubmitEvalsDelegate, this.onSubmitEvalsCompletedDelegate, userState);
        }
        
        public EvalServiceLibrary.Eval[] GetEvals() {
            return base.Channel.GetEvals();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetEvals(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEvals(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public EvalServiceLibrary.Eval[] EndGetEvals(System.IAsyncResult result) {
            return base.Channel.EndGetEvals(result);
        }
        
        private System.IAsyncResult OnBeginGetEvals(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetEvals(callback, asyncState);
        }
        
        private object[] OnEndGetEvals(System.IAsyncResult result) {
            EvalServiceLibrary.Eval[] retVal = this.EndGetEvals(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEvalsCompleted(object state) {
            if ((this.GetEvalsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEvalsCompleted(this, new GetEvalsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEvalsAsync() {
            this.GetEvalsAsync(null);
        }
        
        public void GetEvalsAsync(object userState) {
            if ((this.onBeginGetEvalsDelegate == null)) {
                this.onBeginGetEvalsDelegate = new BeginOperationDelegate(this.OnBeginGetEvals);
            }
            if ((this.onEndGetEvalsDelegate == null)) {
                this.onEndGetEvalsDelegate = new EndOperationDelegate(this.OnEndGetEvals);
            }
            if ((this.onGetEvalsCompletedDelegate == null)) {
                this.onGetEvalsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEvalsCompleted);
            }
            base.InvokeAsync(this.onBeginGetEvalsDelegate, null, this.onEndGetEvalsDelegate, this.onGetEvalsCompletedDelegate, userState);
        }
    }
}
